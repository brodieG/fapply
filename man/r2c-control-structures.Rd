% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r2c-package.R
\name{r2c-control-structures}
\alias{r2c-control-structures}
\title{Control Structures}
\description{
\code{r2c} supports \code{if} / \verb{else} statements and \code{for} loops on an experimental
basis.  These substantially complicate the internals of \code{r2c}, and the
\link[=r2c-performance]{performance of loops} is wanting.  Continued support for
control structures is not guaranteed in future versions of \code{r2c}.
}
\details{
Both \code{if} / \verb{else} and \code{for} loops have branches; the loop branches are loop
not taken (0 iterations) vs loop taken (1+ iterations).  Branches add
constraints and semantic differences to the equivalents in R:
\itemize{
\item Control structure return values must be guaranteed to be the same
size irrespective of the branch taken, if they are subsequently used.
Return values are coerced to a common type.
\item Assignments made within control structure branches must be
the same size irrespective of branch taken, if the corresponding bindings
are subsequently used.  Assigned values are coerced to a common type.
\item Control structures can be nested at most 999 levels.
\item \link[=r2c-expression-types]{Constant expressions} must be valid in every branch,
even if the branch is not taken at run time.
}

To clarify the last point, consider:

\if{html}{\out{<div class="sourceCode">}}\preformatted{if(n > 0) sum(seq_len(n)) else 0
}\if{html}{\out{</div>}}

The call to \code{seq_len} is a non-implemented \link[=r2c-expression-types]{constant expression} so it is run at allocation time.  On the
other hand, \code{n > 0} is a varying expression only run after allocation, so
\code{r2c} externally evaluates \code{seq_len(n)} irrespective of the value of \code{n}.
Checks like the \code{n > 0} above need to be done outside of \code{r2c}.

There are also other minor semantic differences:
\itemize{
\item \code{if}/\verb{else} and \code{for} both return \code{numeric(0)} instead of NULL when in R
they  would return NULL.
\item \code{\link[base:Control]{for}} sets \code{var} to NA_real_ if \code{length(seq) == 0} instead of
NULL.
}
}
\seealso{
The \link[=r2c-memory]{memory help page} for background on the equal
size requirements, and \link[=r2c-preprocess]{preprocessing} for more
control structure implementation details.  Also: \link[=r2c]{package overview}.
}
\keyword{internal}
